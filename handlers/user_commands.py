from aiogram import Router, F, Bot
from aiogram.types import Message, InlineKeyboardButton, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from utils.model import diseases_check
from utils.states import Form, Profile
from utils.laborantdb import db_create_user, db_add_user_profile, db_delete_user_profile, db_create_file, db_find_user_profile, db_find_user_profiles, db_check_confirmation, db_rate_file
from keyboards import reply, inline
from config_reader import config
from bot import db

router = Router()


@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        f'üåü –î–æ–±—Ä—ã–π –¥–µ–Ω—å, {message.from_user.first_name}!\n–Ø –≥–æ—Ç–æ–≤ –í–∞–º –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–æ–≤ –∫—Ä–æ–≤–∏.'
    )
    await message.answer("üîí –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, <b>–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</b>, –µ—Å–ª–∏ –í—ã —Å–æ–≥–ª–∞—Å–Ω—ã –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.", reply_markup=inline.start_button, parse_mode="HTML")
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–•–æ—Ä–æ—à–æ"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–•–æ—Ä–æ—à–æ"
@router.callback_query(F.data == "policy_confirmed")
async def ask_age(callback_query: CallbackQuery, state: FSMContext):
    _ = await db_create_user(db, callback_query.from_user.id)
    await callback_query.message.answer('–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=reply.main)
    await callback_query.message.edit_text("–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º.")

@router.message(F.text.in_(["/aboutus", "–û –Ω–∞—Å"]))
async def process_aboutus(message: Message, state: FSMContext):
    await message.answer("üë©‚Äçüî¨ <b>–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞</b> –≤–∫–ª—é—á–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤–µ–¥—É—â–∏—Ö –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ –†–æ—Å—Å–∏–∏ ‚Äî –§–ú–ë–ê, –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä–∞ –∏ –ö—É—Ä—á–∞—Ç–æ–≤—Å–∫–æ–≥–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞. –ú—ã —Ä–∞–∑–≤–∏–≤–∞–µ–º —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç –ø—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –°–µ—á–µ–Ω–æ–≤—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞, –æ–±—ä–µ–¥–∏–Ω—è—è –º–µ–¥–∏—Ü–∏–Ω—É –∏ –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.\n\n–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–æ–≤ –∫—Ä–æ–≤–∏ —á–µ—Ä–µ–∑ –ø–æ–Ω—è—Ç–Ω—ã–µ –∏ —Ç–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ú—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –æ–ø—ã—Ç–Ω—ã–º–∏ –≤—Ä–∞—á–∞–º–∏ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤–µ–π—à–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.\n\nüîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã:</b> –ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n\nüìö <b>–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏,</b> —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É—è –Ω–∞—à –±–æ—Ç –∏ —É–ª—É—á—à–∞—è —Å–µ—Ä–≤–∏—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –æ–ø—ã—Ç–∞.\n\nü§ù <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ <a href='mailto:laborantapp@gmail.com'>laborantapp@gmail.com</a> –∏–ª–∏ —á–µ—Ä–µ–∑ <a href='https://forms.gle/6PpFbRT8ozykyu7B8'>Google —Ñ–æ—Ä–º—É</a>. –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!", parse_mode="HTML")
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–•–æ—Ä–æ—à–æ"

@router.message(F.text.in_(["/contacts", "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"]))
async def process_contacts(message: Message, state: FSMContext):
    await message.answer("üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n\n–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∑–∞–ø–æ–ª–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, <a href='https://forms.gle/6PpFbRT8ozykyu7B8'>Google —Ñ–æ—Ä–º—É</a>.\n\n–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ –ø–∏—à–∏—Ç–µ –Ω–∞ üìß <a href='mailto:laborantapp@gmail.com'>laborantapp@gmail.com</a>", parse_mode="HTML")

@router.message(F.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å")
async def process_start_command(message: Message, state: FSMContext):
    await state.set_state(state=None)
    await message.answer("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!", reply_markup=reply.main)

@router.message(F.text.in_(["/profiles", "–ü—Ä–æ—Ñ–∏–ª–∏"]))
async def show_profiles(message: Message, state: FSMContext, bot: Bot):
    check = await db_check_confirmation(db, message.from_user.id)
    if check:
        await state.set_state(Form.profile_edit)
        profiles = await db_find_user_profiles(db, message.from_user.id)
        keyboard = InlineKeyboardBuilder()
        for profile in profiles["profiles"]:
            keyboard.add(InlineKeyboardButton(text=profile["name"], callback_data=profile["name"]))
        if len(profiles["profiles"]) < 2:
            keyboard.add(InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="create"))
        keyboard.add(InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="delete"))
        keyboard.adjust(2, 1)
        await bot.send_message(text='–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.', chat_id=message.from_user.id, parse_mode="HTML", reply_markup=keyboard.as_markup())
    else:
        await bot.send_message(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Å–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.', chat_id=message.from_user.id, parse_mode="HTML")


@router.callback_query(Form.profile_edit, F.data == "delete")
async def delete_profile_choice(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    await state.set_state(Form.profile_delete)
    profiles = await db_find_user_profiles(db, callback_query.from_user.id)
    keyboard = InlineKeyboardBuilder()
    for profile in profiles["profiles"]:
        keyboard.add(InlineKeyboardButton(text=profile["name"], callback_data=profile["name"]))
    await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)
    await bot.send_message(text='–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.', chat_id=callback_query.from_user.id, parse_mode="HTML", reply_markup=keyboard.as_markup())


@router.callback_query(Form.profile_delete)
async def delete_profile(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    await db_delete_user_profile(db, callback_query.from_user.id, callback_query.data)
    await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)

    await bot.send_message(text=f'–ü—Ä–æ—Ñ–∏–ª—å "{callback_query.data}" –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.', chat_id=callback_query.from_user.id, parse_mode="HTML", reply_markup=reply.main)


@router.callback_query(Form.profile_edit, F.data == "create")
async def create_profile(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    await state.set_state(Profile.name)
    await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)
    await bot.send_message(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è.', chat_id=callback_query.from_user.id, reply_markup=reply.cancel)


@router.callback_query(Form.profile_edit, ~F.data.in_(["create", "delete"]))
async def set_profile(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    profile = await db_find_user_profile(db, callback_query.from_user.id, callback_query.data)

    await state.set_state(Form.user_analyses)
    await state.update_data(name=profile['name'])
    sex = '–ú—É–∂—á–∏–Ω–∞' if profile['sex'] else '–ñ–µ–Ω—â–∏–Ω–∞'
    await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)

    if profile['healthy']:
        await bot.send_message(text=f'–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n–í—ã–±—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å "{profile['name']}"\n<b>–í–æ–∑—Ä–∞—Å—Ç</b>: {profile["age"]}\n<b>–ü–æ–ª</b>: {sex}\n <b>–ù–∞–ª–∏—á–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π</b>: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç', chat_id=callback_query.from_user.id, reply_markup=reply.main)
    else:
        await bot.send_message(text=f'–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n–í—ã–±—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å "{profile['name']}"\n<b>–í–æ–∑—Ä–∞—Å—Ç</b>: {profile["age"]}\n<b>–ü–æ–ª</b>: {sex}\n <b>–£–∫–∞–∑–∞–Ω–Ω—ã–µ –±–æ–ª–µ–∑–Ω–∏</b>: {profile["diseases"]}', chat_id=callback_query.from_user.id, reply_markup=reply.main)


@router.message(Profile.name)
async def set_profile_name(message: Message, state: FSMContext, bot: Bot):
    if not await db_find_user_profile(db, message.from_user.id, message.text) is None:
        await bot.send_message(text='–ü—Ä–æ—Ñ–∏–ª—å —Å —ç—Ç–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.', chat_id=message.from_user.id, reply_markup=reply.cancel)
    else:
        await state.update_data(name=message.text)
        await state.set_state(Profile.age)
        await bot.delete_message(message.chat.id,message.message_id - 1)
        await bot.send_message(text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç.', chat_id=message.from_user.id, reply_markup=reply.cancel)


@router.message(Form.user_analyses, F.text.in_(['/analysis', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑']))
async def process_analysis(message: Message, state: FSMContext):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ pdf/docx –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.', reply_markup=reply.cancel)


@router.message(F.text.in_(['/analysis', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑']))
async def process_analysis(message: Message, state: FSMContext):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å.')


@router.message(Profile.age, F.text.regexp(r'.*\D'))
async def age_answer_bad(message: Message, state: FSMContext):
    await message.answer(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å –ø–æ–º–æ—â—å—é —Ü–∏—Ñ—Ä (—Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ).')


@router.message(Profile.age, F.text.regexp(r'^\d+$'))
async def age_answer_good(message: Message, state: FSMContext, bot: Bot):
    await state.update_data(age=int(message.text)) 
    await bot.delete_message(message.chat.id,message.message_id - 1)
    await message.answer('–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª:', reply_markup=inline.sex)
    await state.set_state(Profile.sex)


@router.message(Profile.sex)
async def sex_answer_bad(message: Message, state: FSMContext):
    await message.answer('–î–ª—è –≤—ã–±–æ—Ä–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏.')


@router.callback_query(Profile.sex)
async def sex_answer_good(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(sex=callback_query.data == "–º—É–∂—Å–∫–æ–π")
    await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)
    await bot.send_message(chat_id=callback_query.from_user.id, text="–ï—Å—Ç—å –ª–∏ —É –í–∞—Å –∫–∞–∫–∏–µ-–ª–∏–±–æ <b>—Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ</b> –∏–ª–∏ <b>–Ω–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è</b>?", reply_markup=inline.diseases, parse_mode="HTML")
    await state.set_state(Profile.healthy)


@router.message(Profile.healthy)
async def disease_answer_bad(message: Message, state: FSMContext):
    await message.answer('–î–ª—è –≤—ã–±–æ—Ä–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏.')


@router.callback_query(Profile.healthy)
async def disease_answer_good(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    if callback_query.data == "T":
        await state.update_data(healthy=callback_query.data == "T")
        profile = await state.get_data()
        profile["diseases"] = None
        _ = await db_add_user_profile(db, callback_query.from_user.id, **profile)
        sex = '–ú—É–∂—á–∏–Ω–∞' if profile['sex'] else '–ñ–µ–Ω—â–∏–Ω–∞'
        await state.set_state(Form.user_analyses)
        await state.update_data(name=profile['name'])
        await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)
        await bot.send_message(text=f'–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n–í—ã–±—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å "{profile['name']}"\n<b>–í–æ–∑—Ä–∞—Å—Ç</b>: {profile["age"]}\n<b>–ü–æ–ª</b>: {sex}\n<b>–ù–∞–ª–∏—á–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π</b>: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç', chat_id=callback_query.from_user.id, parse_mode="HTML", reply_markup=reply.main)
    else:
        await state.set_state(Profile.diseases)
        await bot.delete_message(chat_id=callback_query.from_user.id, message_id=callback_query.message.message_id)
        await bot.send_message(chat_id=callback_query.from_user.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–∏–µ —É –í–∞—Å –µ—Å—Ç—å <b>—Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ</b> –ª–∏–±–æ <b>–Ω–∞—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è</b>.", parse_mode="HTML")
        

#@router.message(Form.diseases)
#async def sex_answer_bad(message: Message, state: FSMContext, bot: Bot):
 #   await state.update_data(diseases=message.text)
  #  profile = await state.get_data()
   # await message.answer(f'–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –í—ã —É–∫–∞–∑–∞–ª–∏,\n–í–æ–∑—Ä–∞—Å—Ç: {profile["age"]}\n–ü–æ–ª: {profile["sex"]}\n–ù–∞–ª–∏—á–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π: {profile['diseases']}')
    #await bot.send_message(chat_id=message.from_user.id, text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, pdf —Å –∞–Ω–∞–ª–∏–∑–∞–º–∏.")
    #await state.set_state(Form.user_analyses)

    # await bot.send_message(chat_id=callback_query.from_user.id, text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, pdf —Å –∞–Ω–∞–ª–∏–∑–∞–º–∏.")
    # await state.set_state(Form.user_analyses)


#–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —á–∞—Ç–∞–≥–ø—Ç
@router.message(Profile.diseases)
async def set_diseases(message: Message, state: FSMContext, bot: Bot):

    # –ü—Ä–æ–≥–æ–Ω—è–µ–º —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ diseases_check
    diseases_filtered = diseases_check(message.text)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–∞
    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ FSM, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await state.update_data(diseases=diseases_filtered)
    await bot.delete_message(message.chat.id,message.message_id - 1)

    # –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    profile = await state.get_data()
    profile['healthy'] = False
    _ = await db_add_user_profile(db, message.from_user.id, **profile)
    await state.set_state(Form.user_analyses)
    await state.update_data(name=profile['name'])
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    sex = '–ú—É–∂—á–∏–Ω–∞' if profile['sex'] else '–ñ–µ–Ω—â–∏–Ω–∞'
    await bot.send_message(
        text=f'–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n–í—ã–±—Ä–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å "{profile['name']}"\n<b>–í–æ–∑—Ä–∞—Å—Ç</b>: {profile["age"]}\n<b>–ü–æ–ª</b>: {sex}\n<b>–£–∫–∞–∑–∞–Ω–Ω—ã–µ –±–æ–ª–µ–∑–Ω–∏</b>: {profile["diseases"]}',
        chat_id=message.from_user.id,
        parse_mode="HTML",
        reply_markup=reply.main
    )


@router.callback_query(F.data.startswith('rating_'))
async def disease_answer_good(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    _, analysis_id, rating = callback_query.data.split('_')
    await db_rate_file(db, callback_query.from_user.id, analysis_id, int(rating))
    await bot.edit_message_reply_markup(
        chat_id=callback_query.from_user.id,
        message_id=callback_query.message.message_id, 
        reply_markup=None
    )