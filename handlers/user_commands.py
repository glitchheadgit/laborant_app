from aiogram import Router, F, Bot
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

from utils.states import Form
from keyboards import reply, inline


router = Router()

@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext):
    await state.clear()
    
    await message.answer(
        f'üåü –î–æ–±—Ä—ã–π –¥–µ–Ω—å, {message.from_user.first_name}!\n–Ø –≥–æ—Ç–æ–≤ –í–∞–º –ø–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–æ–≤ –∫—Ä–æ–≤–∏.'
    )
    await message.answer("üîí –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, <b>–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</b>, –µ—Å–ª–∏ –í—ã —Å–æ–≥–ª–∞—Å–Ω—ã –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.", reply_markup=inline.start_button, parse_mode="HTML")
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–•–æ—Ä–æ—à–æ"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–•–æ—Ä–æ—à–æ"
@router.callback_query(F.data == "ok")
async def ask_age(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(Form.ok)
    await callback_query.message.answer('–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=reply.main)
    await callback_query.message.edit_text("–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º.")

@router.message(F.text.in_(["/aboutus", "–û –Ω–∞—Å"]))
async def process_aboutus(message: Message, state: FSMContext):
    await message.answer("üë©‚Äçüî¨ <b>–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞</b> –≤–∫–ª—é—á–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤–µ–¥—É—â–∏—Ö –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ –†–æ—Å—Å–∏–∏ ‚Äî –§–ú–ë–ê, –†–æ—Å–ø–æ—Ç—Ä–µ–±–Ω–∞–¥–∑–æ—Ä–∞ –∏ –ö—É—Ä—á–∞—Ç–æ–≤—Å–∫–æ–≥–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞. –ú—ã —Ä–∞–∑–≤–∏–≤–∞–µ–º —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç –ø—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –°–µ—á–µ–Ω–æ–≤—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞, –æ–±—ä–µ–¥–∏–Ω—è—è –º–µ–¥–∏—Ü–∏–Ω—É –∏ –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.\n\n–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–æ–≤ –∫—Ä–æ–≤–∏ —á–µ—Ä–µ–∑ –ø–æ–Ω—è—Ç–Ω—ã–µ –∏ —Ç–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ú—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –æ–ø—ã—Ç–Ω—ã–º–∏ –≤—Ä–∞—á–∞–º–∏ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤–µ–π—à–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.\n\nüîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã:</b> –ú—ã –Ω–µ —Ö—Ä–∞–Ω–∏–º –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ–º –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n\nüìö <b>–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏,</b> —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É—è –Ω–∞—à –±–æ—Ç –∏ —É–ª—É—á—à–∞—è —Å–µ—Ä–≤–∏—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –æ–ø—ã—Ç–∞.\n\nü§ù <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ <a href='mailto:laborantapp@gmail.com'>laborantapp@gmail.com</a> –∏–ª–∏ —á–µ—Ä–µ–∑ <a href='https://forms.gle/6PpFbRT8ozykyu7B8'>Google —Ñ–æ—Ä–º—É</a>. –ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å!", parse_mode="HTML")
  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–•–æ—Ä–æ—à–æ"

@router.message(F.text.in_(["/contacts", "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"]))
async def process_contacts(message: Message, state: FSMContext):
    await message.answer("üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n\n–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∑–∞–ø–æ–ª–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, <a href='https://forms.gle/6PpFbRT8ozykyu7B8'>Google —Ñ–æ—Ä–º—É</a>.\n\n–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ –ø–∏—à–∏—Ç–µ –Ω–∞ üìß <a href='mailto:laborantapp@gmail.com'>laborantapp@gmail.com</a>", parse_mode="HTML")

@router.message(F.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å")
async def process_start_command(message: Message, state: FSMContext):
    await state.clear()
    await state.set_state(Form.ok)
    await message.answer("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!", reply_markup=reply.main)

@router.message(Form.ok, F.text.in_(['/analysis', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑']))
async def process_analysis(message: Message, state: FSMContext):
    await state.set_state(Form.age)
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç.', reply_markup=reply.cancel)

@router.message(F.text.in_(['/analysis', '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑']))
async def process_analysis(message: Message, state: FSMContext):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Å–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.')

@router.message(Form.age, F.text.regexp(r'.*\D'))
async def age_answer_bad(message: Message, state: FSMContext):
    await message.answer(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Å –ø–æ–º–æ—â—å—é —Ü–∏—Ñ—Ä (—Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ).')


@router.message(Form.age, F.text.regexp(r'^\d+$'))
async def age_answer_good(message: Message, state: FSMContext):
    await state.update_data(age=message.text)    
    await message.answer('–°–ø–∞—Å–∏–±–æ!\n–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª:', reply_markup=inline.sex)
    await state.set_state(Form.sex)


@router.message(Form.sex)
async def sex_answer_bad(message: Message, state: FSMContext):
    await message.answer('–î–ª—è –≤—ã–±–æ—Ä–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏.')


@router.callback_query(Form.sex)
async def sex_answer_good(callback_query: CallbackQuery, state: FSMContext, bot: Bot):
    await state.update_data(sex=callback_query.data)
    user_data = await state.get_data()
    await callback_query.answer(f'–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –í—ã —É–∫–∞–∑–∞–ª–∏,\n–í–æ–∑—Ä–∞—Å—Ç: {user_data["age"]}\n–ü–æ–ª: {user_data["sex"]}')
    await bot.send_message(chat_id=callback_query.from_user.id, text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, pdf —Å –∞–Ω–∞–ª–∏–∑–∞–º–∏.")
    await state.set_state(Form.user_analyses)


